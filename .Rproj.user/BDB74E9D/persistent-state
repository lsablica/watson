build-last-errors="[]"
build-last-errors-base-dir="~/Dropbox/Watson/Untitled Folder/watson/"
build-last-outputs="[{\"type\":0,\"output\":\"==> Rcpp::compileAttributes()\\n\\n\"},{\"type\":1,\"output\":\"* Updated R/RcppExports.R\\n\"},{\"type\":1,\"output\":\"\\n\"},{\"type\":0,\"output\":\"==> roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))\\n\\n\"},{\"type\":2,\"output\":\"Updating roxygen version in /home/sablica/Dropbox/Watson/Untitled Folder/watson/DESCRIPTION\\n\"},{\"type\":2,\"output\":\"ℹ Loading watson\\n\"},{\"type\":1,\"output\":\"Exports from /home/sablica/Dropbox/Watson/Untitled Folder/watson/src/rwat.cpp:\\n   arma::mat rwat(int n, double kappa, arma::vec& mu, double b = -10)\\n   NumericMatrix rmwat(int n, arma::vec& weights, arma::vec kappa, arma::mat& mu, double b = -10)\\n\\n\"},{\"type\":1,\"output\":\"Exports from /home/sablica/Dropbox/Watson/Untitled Folder/watson/src/wat6.cpp:\\n   double g(double alpha, double beta, double x, int N = 30)\\n   double kummerM(double alpha, double beta, double r)\\n   double log_hyperg_1F1(double alpha, double beta, double r, int N = 10)\\n   NumericMatrix diam_clus1(arma::mat& data, int K, int maxiter = 100)\\n   NumericMatrix diam_clus2(arma::sp_mat& data, int K, int maxiter = 100)\\n   NumericMatrix predictC1(arma::mat& data, arma::vec& kappa_vector, arma::mat& mu_matrix, arma::rowvec& pi_vector, String E_type, int K)\\n   NumericMatrix predictC2(arma::sp_mat& data, arma::vec& kappa_vector, arma::mat& mu_matrix, arma::rowvec& pi_vector, String E_type, int K)\\n   double log_like1(arma::mat& data, const arma::vec& kappa_vector, const arma::mat& mu_matrix, const arma::rowvec& pi_vector, int K, double beta, int n)\\n   double log_like2(arma::sp_mat& data, const arma::vec& kappa_vector, const arma::mat& mu_matrix, const arma::rowvec& pi_vector, int K, double beta, int n)\\n   List EM1(arma::mat& data, int K, String E_type, String M_type, double minalpha = 0, bool convergence = true, int maxiter = 100, int N = 30, double reltol = 1e-9, List start = R_NilValue, bool verbose = false)\\n   List EM2(arma::sp_mat& data, int K, String E_type, String M_type, double minalpha = 0, bool convergence = true, int maxiter = 100, int N = 30, double reltol = 1e-9, List start = R_NilValue, bool verbose = false)\\n\\n/home/sablica/Dropbox/Watson/Untitled Folder/watson/src/RcppExports.cpp updated.\\n/home/sablica/Dropbox/Watson/Untitled Folder/watson/R/RcppExports.R updated.\\n\"},{\"type\":2,\"output\":\"Re-compiling watson\\n\"},{\"type\":1,\"output\":\"* installing *source* package ‘watson’ ...\\n** using staged installation\\n\"},{\"type\":1,\"output\":\"** libs\\ng++ -std=gnu++11 -I\\\"/usr/share/R/include\\\" -DNDEBUG  -I'/home/sablica/R/x86_64-pc-linux-gnu-library/4.1/Rcpp/include' -I'/home/sablica/R/x86_64-pc-linux-gnu-library/4.1/RcppArmadillo/include'   -fopenmp  -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -UNDEBUG -Wall -pedantic -g -O0 -c RcppExports.cpp -o RcppExports.o\\n\"},{\"type\":1,\"output\":\"g++ -std=gnu++11 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o watson.so RcppExports.o hyper3.o rwat.o wat6.o -fopenmp -llapack -lblas -lgfortran -lm -lquadmath -L/usr/lib/R/lib -lR\\n\"},{\"type\":1,\"output\":\"installing to /tmp/Rtmp7y6FCf/devtools_install_2bea14d17254/00LOCK-watson/00new/watson/libs\\n\"},{\"type\":1,\"output\":\"** checking absolute paths in shared objects and dynamic libraries\\n\"},{\"type\":1,\"output\":\"* DONE (watson)\\n\"},{\"type\":1,\"output\":\"Writing NAMESPACE\\n\"},{\"type\":1,\"output\":\"Writing NAMESPACE\\n\"},{\"type\":1,\"output\":\"Documentation completed\\n\\n\"},{\"type\":0,\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source watson\\n\\n\"},{\"type\":1,\"output\":\"* installing to library ‘/home/sablica/R/x86_64-pc-linux-gnu-library/4.1’\\n\"},{\"type\":1,\"output\":\"* installing *source* package ‘watson’ ...\\n\"},{\"type\":1,\"output\":\"** using staged installation\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"make: Nothing to be done for 'all'.\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** libs\\n\"},{\"type\":1,\"output\":\"installing to /home/sablica/R/x86_64-pc-linux-gnu-library/4.1/00LOCK-watson/00new/watson/libs\\n\"},{\"type\":1,\"output\":\"** R\\n\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\n\"},{\"type\":1,\"output\":\"*** installing help indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** building package indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** checking absolute paths in shared objects and dynamic libraries\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\n\"},{\"type\":1,\"output\":\"* DONE (watson)\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"ignoreCase\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOn\":[],\"matchOff\":[],\"replaceMatchOn\":[],\"replaceMatchOff\":[]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="0"
saveActionState="0"
