library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library("e1071")

traindata<-read.csv("/home/sablica/Dropbox/Watson/Example/train.csv",header=T)
testdata<-read.csv("/home/sablica/Dropbox/Watson/Example/test.csv",header=T)

data<-rbind(traindata,testdata)

#Applying nameing transformation to entire dataset
nameVec <- make.names(names(data),unique=TRUE)
names(data) <- nameVec

#Splitting data into training and testing dataset
traindata<-data[1:7352,]
testdata<-data[-c(1:7352),]

traindata <- traindata[,c(121,122,123,563)]

dim(data)

pc <- prcomp(traindata[,-563], center=TRUE, scale=TRUE)
pc.var <- pc$sdev^2
pc.pvar <- pc.var/sum(pc.var)

plot(cumsum(pc.pvar),xlab="Principal component", ylab="Cumulative Proportion of variance explained",type='b',main="Principal Components proportions",col="red")
abline(h=0.95)
abline(v=100)

train.data<-data.frame(activity=traindata$Activity,pc$x)
train.data<-train.data[,1:100]

td <- train.data[,-1]
td <- as.matrix(td)
library(watson)


traindata <- traindata[,c(grep("mean", nameVec),563)]
td <- as.matrix(traindata[,-dim(traindata)[2]])
W <- watson(td, 6, nruns = 100, E = "hard")
table(predict(W),as.factor(traindata$Activity))
WW <- watson(td, 6, ids= TRUE)


catearly <- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE")
catlate<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL")
lewis<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L")
dataa <- rbind(catearly, catlate, lewis)
dataa$type <- as.factor(dataa$type)
datb <- dataa[, -4]
datb <- datb/sqrt(rowSums(datb^2))
dataa[,c(1,2,3)] <- datb

catearly <- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE")
catlate<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL")
lewis<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L")
dataa <- rbind(catearly, catlate)
dataa$type <- as.factor(dataa$type)
datb <- dataa[, -4]
datb <- datb/sqrt(rowSums(datb^2))
dataa[,c(1,2,3)] <- datb

library(rgl)
rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(dataa[,1],dataa[,2],dataa[,3], ylim=c(-1,1), col = c(dataa[,4]) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
rgl.texts(dataa[,1],dataa[,2],dataa[,3], text = paste(1:100),  color = "black")
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")

library(watson)
g6 <- watson(datb, 6, nruns = 1000, minweight = 0.1)
g5 <- watson(datb, 5, nruns = 1000)
g4 <- watson(datb, 4,  nruns = 1000)
g3 <- watson(datb, 3, nruns = 1000)
g2 <- watson(datb, 2, nruns = 1000)

rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(dataa[,1],dataa[,2],dataa[,3], ylim=c(-1,1), col = predict(g2) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")

rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(dataa[,1],dataa[,2],dataa[,3], ylim=c(-1,1), col = predict(g6) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")

attr(datb, "id") <-  as.factor(c(dataa[,4]))
idd <- attr(datb, "id")
datb <- as.matrix(datb)
attr(datb, "id") <- idd


gg <- watson(datb, 3, ids= as.factor(c(dataa[,4])))
rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(dataa[,1],dataa[,2],dataa[,3], ylim=c(-1,1), col = predict(gg) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")



catearly <- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE")
catlate<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL")
lewis<- cbind(read.csv("/home/sablica/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L")

dataa <- rbind(cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE"),
               cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL"),
               cbind(read.csv("/home/sablica/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L"))
classif <- as.factor(dataa$type)
datb <- dataa[, -4]

ind = datb$theta>=pi/2
datb[ !ind, ] <- cbind(datb[ !ind, 1] + pi, pi - datb[ !ind, 2] , pi - datb[ !ind, 3]  )
new_angles <- as.data.frame(cbind(strike = datb$phi-pi/2, dip = pi - datb$theta, rake = datb$psi + pi/2))

n <- cbind(-sin(new_angles$dip)*sin(new_angles$strike),-sin(new_angles$dip)*cos(new_angles$strike), cos(new_angles$dip))
d <- cbind(cos(new_angles$rake)*cos(new_angles$strike) + sin(new_angles$rake)*cos(new_angles$dip)*sin(new_angles$strike),
       -cos(new_angles$rake)*sin(new_angles$strike) + sin(new_angles$rake)*cos(new_angles$dip)*cos(new_angles$strike),
       sin(new_angles$rake)*sin(new_angles$dip))
b <- cbind(-sin(new_angles$rake)*cos(new_angles$strike) + cos(new_angles$rake)*cos(new_angles$dip)*sin(new_angles$strike),
       sin(new_angles$rake)*sin(new_angles$strike) + cos(new_angles$rake)*cos(new_angles$dip)*cos(new_angles$strike),
       cos(new_angles$rake)*sin(new_angles$dip))

rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(b[,1],b[,2],b[,3], ylim=c(-1,1), col = c(classif) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")

library(watson)
g3 <- watson(b, 3, nruns = 1000)


rgl.open()
view3d( theta = 195, phi = 10, zoom =0.5)
rgl.bg(color = "white")
rgl.points(b[,1],b[,2],b[,3], ylim=c(-1,1), col = predict(g3) ,xlim=c(-1,1), zlim = c(-1,1), xlab = "x", ylab = "y", zlab = "z", alpha = 0.8)
spheres3d(x = 0, y = 0, z = 0, radius = 0.98, col = "yellow", alpha = 0.6, back = "lines")
rgl.lines(c(-1.5,1.5), c(0, 0), c(0, 0), color = "black")
rgl.lines(c(0, 0), c(-1.5,1.5), c(0, 0), color = "blue")
rgl.lines(c(0, 0), c(0, 0), c(-1.5,1.5), color = "red")


dataa <- rbind(cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE"),
               cbind(read.csv("/home/sablica/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL"),
               cbind(read.csv("/home/sablica/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L"))
classif <- as.factor(dataa$type)
dataa <- dataa[, -4]

ind = dataa$theta>=pi/2
dataa[ !ind, ] <- cbind(dataa[ !ind, 1] + pi, pi - dataa[ !ind, 2] , pi - dataa[ !ind, 3]  )
new_angles <- as.data.frame(cbind(strike = dataa$phi-pi/2, dip = pi - dataa$theta, rake = dataa$psi + pi/2))

b <- cbind(-sin(new_angles$rake)*cos(new_angles$strike) + cos(new_angles$rake)*cos(new_angles$dip)*sin(new_angles$strike),
           sin(new_angles$rake)*sin(new_angles$strike) + cos(new_angles$rake)*cos(new_angles$dip)*cos(new_angles$strike),
           cos(new_angles$rake)*sin(new_angles$dip))

gg <- watson(b, ids = classif)
gg


dataa <- rbind(cbind(read.csv("~/Dropbox/Watson/Example/cantyearlyPTaxes.csv",header=T), type = "CE"),
               cbind(read.csv("~/Dropbox/Watson/Example/cantylatePTaxes.csv",header=T), type = "CL"),
               cbind(read.csv("~/Dropbox/Watson/Example/lewisPTaxes.csv",header=T), type = "L"))
classif <- as.factor(dataa$type)
dataa <- dataa[, -4]


ind = dataa$theta>=pi/2
dataa[ !ind, ] <- cbind(dataa[ !ind, 1] + pi, pi - dataa[ !ind, 2], pi - dataa[ !ind, 3])
new_angles <- as.data.frame(cbind(strike = dataa$phi-pi/2,
                                  dip = pi - dataa$theta,
                                  rake = dataa$psi + pi/2))

b <- cbind(-sin(new_angles$rake)*cos(new_angles$strike) + 
              cos(new_angles$rake)*cos(new_angles$dip)*sin(new_angles$strike),
           sin(new_angles$rake)*sin(new_angles$strike) + 
              cos(new_angles$rake)*cos(new_angles$dip)*cos(new_angles$strike),
           cos(new_angles$rake)*sin(new_angles$dip))

set.seed(4)
s = sample(132,32)
testc <- classif[s]
testb <- b[s,]

trainc <- classif[-s]
trainb <- b[-s,]

gg <- watson(trainb, ids = trainc)
gg
t1 <- predict(gg, testb)
t1 <- replace(t1, t1 == 2, 1)
levels(testc) <- c(levels(testc),"C" )
t2 <- factor(replace(testc,  testc == "CL" | testc == "CE", "C"), levels = c("C", "L"))
table(t1,t2)

table(predict(gg, testb),testc)

